from typing import Protocol, BinaryIO, Optional, Dict, Any

class IStorage(Protocol):
    provider: str

    async def upload(self, *, key: str, body: BinaryIO, content_type: str) -> None: ...
    async def delete(self, *, key: str) -> None: ...
    def url(self, *, key: str, is_public: bool = False, ttl_seconds: int = 900) -> str: ...

    # Optional presign flows (cloud adapters implement some of these)
    def presign_post(self, *, key: str, content_type: str, is_public: bool = False, expires_in: int = 900) -> Dict[str, Any]: ...
    def presign_put(self, *, key: str, content_type: str, is_public: bool = False, expires_in: int = 900) -> Dict[str, Any]: ...
    def presign_get(self, *, key: str, expires_in: int = 900) -> str: ...
